#ifndef __DATA_STRUCTS_H__
#define __DATA_STRUCTS_H__

#include <stdint.h>

//#pragma pack(push, 1)
typedef struct
{
	uint16_t TypeId;			//Код типа прибора (каждый тип прибора имеет свой уникальный код)
								//например R100(CU) - 0x5264 (логика может быть такая: 'R' - 0x52, 100 - 0x64),
								//		   R100(PU) - 0x5265 (R100(CU) + 1)
	uint16_t SerialNumber;		//Серийный номер
	uint16_t Revision;			//Редакция прибора (изменение прибора не влияющие на его характеристики. Т.е.
								//каждый тип прибора может изменятся при серийном выпуске - устранение ошибок,
								//модификация составных частей ...)
	uint16_t Modification;		//Модификация прибора (каждый тип прибора может выпускаться в
								//разных модификациях, т.е. может иметь разную точность, диапазон ...)
	uint16_t ManufacturerId;	//Код производителя:
								//  0 - ОЛТЕСТ
								//  1 - ОЛДЕМ
								//  
	uint16_t Region;			//Регион для которого сделан прибор:
								//	0 - Весь мир (или это не важно)
								//	1 - Европейский союз
								//	2 - Россия (+ другие страны СНГ)
								//	3 - Украина
								//
	uint16_t Language;			//Язык интерфейса:
								//  0 - Нет интерфейса (прибор без индикатора)
								//  1 - Многоязычный
								//  2 - Английский
								//  3 - Русский
								//  4 - Украинский
								//  5 - Польский
								//
	uint16_t Reserved;			//Зарезервировано для будущего использования 
} DS_Device_Info_16;

typedef struct
{
	char Name[16];				 //Наименование прибора (например "R100.1")
	char FirmwareVersion[16];	 //Версия встроенного ПО (прошивки) (например "1.00")
	char FirmwareVersionData[16]; //Дата выхода версии ("15.01.2021")
	char Note[128];				  //Дополнительная информация о приборе (например заметки инженеров отдела сервиса,
								  //производства или метрологии, можно указать кто калибровал или производил)
} DS_Device_Info_Str;


//#pragma pack(pop)

#endif /* __MB_H__ */
